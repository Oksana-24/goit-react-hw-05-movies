{"version":3,"file":"static/js/247.2a648d5a.chunk.js","mappings":"yNAwDA,UApDa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,wFACbH,EADa,2CAGOI,EAAAA,EAAAA,IAAWJ,GAHlB,OAGPF,EAHO,OAKbC,EAASD,GALI,gDAObO,QAAQC,IAAI,SAPC,uIAAH,qDAahBH,GACD,GAAE,CAACH,KAEF,6BACGF,EAAMS,OAAS,IACd,wBACGT,EAAMU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACT,0BACGA,GACC,gBACEC,IA1BC,4BA0BeD,EAChBE,IAAKH,EACLI,MAAO,IACPC,OAAQ,OAGV,gBACEH,IAAI,sCACJC,IAAI,YACJC,MAAO,IACPC,OAAQ,OAGZ,uBAAIL,KACJ,yBAAG,cAAYD,OAjBRT,EADA,OAyBpB,C,+LC5CM,SAAegB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,qBADlB,uBACGC,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBpB,GAAxB,yFACkBiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,oBADlB,uBACGkB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,yFACkBiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,4BADlB,uBACGkB,EADH,EACGA,KADH,kBAGEA,EAAKG,MAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BtB,GAA1B,yFACkBiB,EAAAA,EAAAA,IAAA,iBACXjB,EADW,mCADlB,uBACGkB,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBP,EAAAA,EAAAA,IAAA,8BAAiCO,EAAjC,YADlB,uBACGN,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAhCPF,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBQ,QALc,mC","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/api';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState('');\n  const { id } = useParams();\n  const ImageUrl = '//image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    const castSearch = async () => {\n      if (id) {\n        try {\n          const casts = await getCredits(id);\n          //   console.log(casts);\n          setCasts(casts);\n        } catch (error) {\n          console.log('error');\n        } finally {\n        }\n      }\n      return;\n    };\n    castSearch();\n  }, [id]);\n  return (\n    <section>\n      {casts.length > 0 && (\n        <ul>\n          {casts.map(({ id, character, name, profile_path }) => (\n            <li key={id}>\n              {profile_path ? (\n                <img\n                  src={ImageUrl + profile_path}\n                  alt={name}\n                  width={280}\n                  height={420}\n                />\n              ) : (\n                <img\n                  src=\"https://via.placeholder.com/200x100\"\n                  alt=\"Not found\"\n                  width={280}\n                  height={420}\n                />\n              )}\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '76462d3bd6c0e95720113bcbaeb46aaa';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/all/day`);\n  // console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovie(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  // console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  // console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  // console.log(data.results);\n  return data.results;\n}\n\nexport async function getSearch(queryName) {\n  const { data } = await axios.get(`/search/movie?query=${queryName}&page=1`);\n  // console.log(data.results);\n  return data.results;\n}\n"],"names":["useState","casts","setCasts","id","useParams","useEffect","castSearch","getCredits","console","log","length","map","character","name","profile_path","src","alt","width","height","getTrending","axios","data","results","getMovie","cast","getReviews","getSearch","queryName","api_key"],"sourceRoot":""}