{"version":3,"file":"static/js/415.373d379f.chunk.js","mappings":"2KAqBA,IAjBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACV,yBACE,UAAC,KAAD,CAASC,GAAE,iBAAYJ,GAAMK,MAAO,CAAEC,KAAMT,GAA5C,WACE,gBAAKU,IANE,4BAMcN,EAAaO,IAAKN,EAAOO,MAAO,OACrD,+BAAKP,QAAL,IAAKA,EAAAA,EAASC,QAHTH,EADC,KAUjB,C,yGCQD,UAvBa,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEEC,EAAAA,EAAAA,MAFF,OAEZC,EAFY,OAGlBJ,EAAUI,GAHQ,gDAKlBC,QAAQC,IAAI,SALM,qGAAH,qDASnBJ,GACD,GAAE,KAGD,2BACE,SAAC,IAAD,CAAWjB,OAAQA,KAGxB,C,+LCfM,SAAekB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBI,EAAAA,EAAAA,IAAA,qBADlB,uBACGC,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBrB,GAAxB,yFACkBkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBADlB,uBACGmB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BtB,GAA1B,yFACkBkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BADlB,uBACGmB,EADH,EACGA,KADH,kBAGEA,EAAKI,MAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BxB,GAA1B,yFACkBkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,mCADlB,uBACGmB,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBR,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,YADlB,uBACGP,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAhCPF,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBS,QALc,mC","sources":["components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  const ImageUrl = '//image.tmdb.org/t/p/w500';\n  return (\n    <ul>\n      {movies.map(({ id, poster_path, title, name }) => (\n        <li key={id}>\n          <NavLink to={`/movie/${id}`} state={{ from: location }}>\n            <img src={ImageUrl + poster_path} alt={title} width={280} />\n            <h3>{title ?? name}</h3>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import MovieList from 'components/MovieList/MovieList';\nimport React, { useEffect, useState } from 'react';\nimport { getTrending } from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const movieTrending = async () => {\n      try {\n        const movie = await getTrending();\n        setMovies(movie);\n      } catch (error) {\n        console.log('error');\n      } finally {\n      }\n    };\n    movieTrending();\n  }, []);\n\n  return (\n    <main>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '76462d3bd6c0e95720113bcbaeb46aaa';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/all/day`);\n  // console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovie(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  // console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  // console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  // console.log(data.results);\n  return data.results;\n}\n\nexport async function getSearch(queryName) {\n  const { data } = await axios.get(`/search/movie?query=${queryName}&page=1`);\n  // console.log(data.results);\n  return data.results;\n}\n"],"names":["movies","location","useLocation","map","id","poster_path","title","name","to","state","from","src","alt","width","useState","setMovies","useEffect","movieTrending","getTrending","movie","console","log","axios","data","results","getMovie","getCredits","cast","getReviews","getSearch","queryName","api_key"],"sourceRoot":""}