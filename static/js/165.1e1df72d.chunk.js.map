{"version":3,"file":"static/js/165.1e1df72d.chunk.js","mappings":"gRAiDA,EA5CkB,SAAC,GAAe,IAAD,IAAZA,EAAY,EAAZA,MACXC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OAE9CC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,UAC3D,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIJ,EAAoBK,QAA9B,UACE,4BAAQ,eAEV,gCACE,gBAAKC,IATM,4BASUb,EAAac,IAAKb,EAAOc,MAAO,OACrD,4BACE,wBAAKd,KACL,yBAAG,eAAaC,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,uBAAIC,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAG7C,gCACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAASR,GAAG,OAAZ,UACE,4BAAQ,cAIZ,yBACE,SAAC,KAAD,CAASA,GAAG,SAAZ,UACE,4BAAQ,wBAKhB,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,ECXD,EA7BqB,WACnB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAO1B,EAAP,KAAc2B,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GAEX,IAAME,EAAS,mCAAG,8GAEUC,EAAAA,EAAAA,IAASR,GAFnB,OAERO,EAFQ,OAGdJ,EAASI,GAHK,gDAKdE,QAAQC,IAAI,SALE,yBAOdL,GAAW,GAPG,4EAAH,qDAUfE,GACD,GAAE,CAACP,EAAIG,KAGN,gCACGC,IAAW,SAACL,EAAA,EAAD,IACXvB,IAAS,SAAC,EAAD,CAAWA,MAAOA,MAGjC,C,+LCxBM,SAAemC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,qBADlB,uBACGC,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAMA,SAAeN,EAAtB,+CAAO,OAAP,oBAAO,WAAwBR,GAAxB,yFACkBY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,oBADlB,uBACGa,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bf,GAA1B,yFACkBY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,4BADlB,uBACGa,EADH,EACGA,KADH,kBAGEA,EAAKG,MAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BjB,GAA1B,yFACkBY,EAAAA,EAAAA,IAAA,iBACXZ,EADW,mCADlB,uBACGa,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBP,EAAAA,EAAAA,IAAA,8BAAiCO,EAAjC,YADlB,uBACGN,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAhCPF,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBQ,QALc,mC","sources":["components/MovieCard/MovieCard.jsx","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Link, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense, useRef } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n  const { poster_path, title, vote_average, overview, genres } = movie;\n  const ImageUrl = '//image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movie');\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>\n        <button>Go back</button>\n      </Link>\n      <section>\n        <img src={ImageUrl + poster_path} alt={title} width={280} />\n        <div>\n          <h2>{title}</h2>\n          <p>User Score: {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(ganre => ganre.name).join(', ')}</p>\n        </div>\n      </section>\n      <section>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">\n              <button>Cast</button>\n            </NavLink>\n          </li>\n\n          <li>\n            <NavLink to=\"review\">\n              <button>Rreviews</button>\n            </NavLink>\n          </li>\n        </ul>\n      </section>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovie } from 'services/api';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const movieInfo = async () => {\n      try {\n        const movieInfo = await getMovie(id);\n        setMovie(movieInfo);\n      } catch (error) {\n        console.log('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieInfo();\n  }, [id, setMovie]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {movie && <MovieCard movie={movie} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '76462d3bd6c0e95720113bcbaeb46aaa';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/all/day`);\n  // console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovie(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  // console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  // console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  // console.log(data.results);\n  return data.results;\n}\n\nexport async function getSearch(queryName) {\n  const { data } = await axios.get(`/search/movie?query=${queryName}&page=1`);\n  // console.log(data.results);\n  return data.results;\n}\n"],"names":["movie","poster_path","title","vote_average","overview","genres","location","useLocation","backLinkLocationRef","useRef","state","from","to","current","src","alt","width","map","ganre","name","join","Suspense","fallback","Loader","id","useParams","useState","setMovie","loading","setLoading","useEffect","movieInfo","getMovie","console","log","getTrending","axios","data","results","getCredits","cast","getReviews","getSearch","queryName","api_key"],"sourceRoot":""}